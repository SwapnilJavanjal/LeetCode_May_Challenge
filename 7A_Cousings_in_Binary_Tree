/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        TreeNode prevParent = null;
        Queue<TreeNode> q = new LinkedList<>();
        
        if(root == null)
            return false;
        
        q.add(root);
        boolean thisRow = false;
        while(!q.isEmpty()) {
            
            int size = q.size();
            for(int i = 0; i < size; i++) {
                TreeNode curr = q.poll();
                
                if(curr.left != null) {
                    if((curr.left.val == x || curr.left.val == y)) {
                        if(prevParent == null){
                            prevParent = curr;
                            thisRow = true;
                        }
                        else if(curr != prevParent)
                            return true;
                        else
                            return false;
                    }
                        q.add(curr.left);
                }
                
                if(curr.right != null) {
                    if((curr.right.val == x || curr.right.val == y)) {
                        if(prevParent == null) {
                            prevParent = curr;
                            thisRow = true;
                        }
                        else if(curr != prevParent)
                            return true;
                        else
                            return false;
                    }
                        q.add(curr.right);
                }
                
            }
            if(thisRow)
                return false;
        }
        return false;
    }
}
